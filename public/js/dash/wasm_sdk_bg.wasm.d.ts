/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const verify_identity_response: () => any;
export const verify_data_contract: () => any;
export const verify_documents: () => any;
export const __wbg_documentwasm_free: (a: number, b: number) => void;
export const documentwasm_id: (a: number) => [number, number];
export const get_dpns_username_by_name: (a: number, b: number, c: number) => any;
export const get_dpns_username_by_name_with_proof_info: (a: number, b: number, c: number) => any;
export const dpns_convert_to_homograph_safe: (a: number, b: number) => [number, number];
export const dpns_is_valid_username: (a: number, b: number) => number;
export const dpns_is_contested_username: (a: number, b: number) => number;
export const dpns_register_name: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const dpns_is_name_available: (a: number, b: number, c: number) => any;
export const dpns_resolve_name: (a: number, b: number, c: number) => any;
export const wasmsdk_documentCreate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number) => any;
export const wasmsdk_documentReplace: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: bigint, m: number, n: number) => any;
export const wasmsdk_documentDelete: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => any;
export const wasmsdk_documentTransfer: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number) => any;
export const wasmsdk_documentPurchase: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: bigint, k: number, l: number) => any;
export const wasmsdk_documentSetPrice: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: bigint, k: number, l: number) => any;
export const wasmsdk_identityCreate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const wasmsdk_identityTopUp: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const wasmsdk_identityCreditTransfer: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number, h: number, i: number) => any;
export const wasmsdk_identityCreditWithdrawal: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number, h: number, i: number, j: number) => any;
export const wasmsdk_identityUpdate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const wasmsdk_masternodeVote: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number) => any;
export const get_protocol_version_upgrade_state: (a: number) => any;
export const get_protocol_version_upgrade_vote_status: (a: number, b: number, c: number, d: number) => any;
export const get_protocol_version_upgrade_state_with_proof_info: (a: number) => any;
export const get_protocol_version_upgrade_vote_status_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const identity_fetch: (a: number, b: number, c: number) => any;
export const identity_fetch_with_proof_info: (a: number, b: number, c: number) => any;
export const identity_fetch_unproved: (a: number, b: number, c: number) => any;
export const get_identity_keys: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => any;
export const get_identity_nonce: (a: number, b: number, c: number) => any;
export const get_identity_nonce_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identity_contract_nonce: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identity_contract_nonce_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identity_balance: (a: number, b: number, c: number) => any;
export const get_identities_balances: (a: number, b: number, c: number) => any;
export const get_identity_balance_and_revision: (a: number, b: number, c: number) => any;
export const get_identity_by_public_key_hash: (a: number, b: number, c: number) => any;
export const get_identities_contract_keys: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_identity_by_non_unique_public_key_hash: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identity_token_balances: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identity_keys_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const get_identity_balance_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identities_balances_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identity_balance_and_revision_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identity_by_public_key_hash_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identity_by_non_unique_public_key_hash_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identities_contract_keys_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_identity_token_balances_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_documents: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const get_documents_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const get_document: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_document_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_dpns_usernames: (a: number, b: number, c: number, d: number) => any;
export const get_dpns_username: (a: number, b: number, c: number) => any;
export const get_dpns_usernames_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const get_dpns_username_with_proof_info: (a: number, b: number, c: number) => any;
export const get_status: (a: number) => any;
export const get_current_quorums_info: (a: number) => any;
export const get_total_credits_in_platform: (a: number) => any;
export const get_prefunded_specialized_balance: (a: number, b: number, c: number) => any;
export const wait_for_state_transition_result: (a: number, b: number, c: number) => any;
export const get_path_elements: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_total_credits_in_platform_with_proof_info: (a: number) => any;
export const get_prefunded_specialized_balance_with_proof_info: (a: number, b: number, c: number) => any;
export const get_path_elements_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const __wbg_wasmerror_free: (a: number, b: number) => void;
export const __wbg_wasmcontext_free: (a: number, b: number) => void;
export const __wbg_identitywasm_free: (a: number, b: number) => void;
export const identitywasm_new: (a: number) => [number, number, number];
export const identitywasm_setPublicKeys: (a: number, b: any) => [number, number, number];
export const identitywasm_balance: (a: number) => number;
export const identitywasm_setBalance: (a: number, b: number) => void;
export const identitywasm_increaseBalance: (a: number, b: number) => number;
export const identitywasm_reduceBalance: (a: number, b: number) => number;
export const identitywasm_setRevision: (a: number, b: number) => void;
export const identitywasm_getRevision: (a: number) => number;
export const identitywasm_toJSON: (a: number) => [number, number, number];
export const identitywasm_hash: (a: number) => [number, number, number, number];
export const identitywasm_getPublicKeyMaxId: (a: number) => number;
export const identitywasm_fromBuffer: (a: number, b: number) => [number, number, number];
export const __wbg_datacontractwasm_free: (a: number, b: number) => void;
export const datacontractwasm_id: (a: number) => [number, number];
export const datacontractwasm_toJSON: (a: number) => [number, number, number];
export const wasmsdk_contractCreate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const wasmsdk_contractUpdate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => any;
export const get_epochs_info: (a: number, b: number, c: number, d: number) => any;
export const get_finalized_epoch_infos: (a: number, b: number, c: number, d: number) => any;
export const get_evonodes_proposed_epoch_blocks_by_ids: (a: number, b: number, c: number, d: number) => any;
export const get_evonodes_proposed_epoch_blocks_by_range: (a: number, b: number, c: number, d: number, e: number, f: number) => any;
export const get_current_epoch: (a: number) => any;
export const get_epochs_info_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const get_current_epoch_with_proof_info: (a: number) => any;
export const get_finalized_epoch_infos_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const get_evonodes_proposed_epoch_blocks_by_ids_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const get_evonodes_proposed_epoch_blocks_by_range_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number) => any;
export const calculate_token_id_from_contract: (a: number, b: number, c: number) => [number, number, number, number];
export const get_token_price_by_contract: (a: number, b: number, c: number, d: number) => any;
export const get_identities_token_balances: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_identity_token_infos: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_identities_token_infos: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_token_statuses: (a: number, b: number, c: number) => any;
export const get_token_direct_purchase_prices: (a: number, b: number, c: number) => any;
export const get_token_contract_info: (a: number, b: number, c: number) => any;
export const get_token_perpetual_distribution_last_claim: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_token_total_supply: (a: number, b: number, c: number) => any;
export const get_identities_token_balances_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_token_statuses_with_proof_info: (a: number, b: number, c: number) => any;
export const get_token_total_supply_with_proof_info: (a: number, b: number, c: number) => any;
export const get_identity_token_infos_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_identities_token_infos_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_token_direct_purchase_prices_with_proof_info: (a: number, b: number, c: number) => any;
export const get_token_contract_info_with_proof_info: (a: number, b: number, c: number) => any;
export const get_token_perpetual_distribution_last_claim_with_proof_info: (a: number, b: number, c: number, d: number, e: number) => any;
export const get_contested_resources: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const get_contested_resource_voters_for_identity: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number) => any;
export const get_contested_resource_identity_votes: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_vote_polls_by_end_date: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const get_contested_resources_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const get_contested_resource_vote_state_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number) => any;
export const get_contested_resource_voters_for_identity_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number) => any;
export const get_contested_resource_identity_votes_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number) => any;
export const get_vote_polls_by_end_date_with_proof_info: (a: number, b: number, c: bigint, d: number, e: bigint, f: number, g: number, h: number) => any;
export const get_contested_resource_vote_state: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: number, p: number) => any;
export const get_group_info: (a: number, b: number, c: number, d: number) => any;
export const get_group_members: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const get_identity_groups: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const get_group_infos: (a: number, b: number, c: number, d: any, e: number) => any;
export const get_group_actions: (a: number, b: number, c: number, d: number, e: number, f: number, g: any, h: number) => any;
export const get_group_action_signers: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const get_groups_data_contracts: (a: number, b: number, c: number) => any;
export const get_group_info_with_proof_info: (a: number, b: number, c: number, d: number) => any;
export const get_group_infos_with_proof_info: (a: number, b: number, c: number, d: any, e: number) => any;
export const get_group_members_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const get_identity_groups_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const get_group_actions_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: any, h: number) => any;
export const get_group_action_signers_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const get_groups_data_contracts_with_proof_info: (a: number, b: number, c: number) => any;
export const start: () => void;
export const identitywasm_getBalance: (a: number) => number;
export const __wbg_wasmsdk_free: (a: number, b: number) => void;
export const wasmsdk_version: (a: number) => number;
export const wasmsdk_testSerialization: (a: number, b: number, c: number) => [number, number, number];
export const __wbg_wasmsdkbuilder_free: (a: number, b: number) => void;
export const wasmsdkbuilder_getLatestVersionNumber: () => number;
export const wasmsdkbuilder_new_mainnet: () => number;
export const wasmsdkbuilder_new_mainnet_trusted: () => [number, number, number];
export const wasmsdkbuilder_new_testnet: () => number;
export const wasmsdkbuilder_new_testnet_trusted: () => [number, number, number];
export const wasmsdkbuilder_build: (a: number) => [number, number, number];
export const wasmsdkbuilder_with_context_provider: (a: number, b: number) => number;
export const wasmsdkbuilder_with_version: (a: number, b: number) => [number, number, number];
export const wasmsdkbuilder_with_settings: (a: number, b: number, c: number, d: number, e: number) => number;
export const prefetch_trusted_quorums_mainnet: () => any;
export const prefetch_trusted_quorums_testnet: () => any;
export const identity_put: (a: number) => any;
export const epoch_testing: () => any;
export const docs_testing: (a: number) => any;
export const wasmsdk_tokenMint: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const wasmsdk_tokenBurn: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenTransfer: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const wasmsdk_tokenFreeze: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenUnfreeze: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenDestroyFrozen: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenSetPriceForDirectPurchase: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const wasmsdk_tokenDirectPurchase: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenClaim: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => any;
export const wasmsdk_tokenConfigUpdate: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number) => any;
export const data_contract_fetch: (a: number, b: number, c: number) => any;
export const data_contract_fetch_with_proof_info: (a: number, b: number, c: number) => any;
export const get_data_contract_history: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint) => any;
export const get_data_contracts: (a: number, b: number, c: number) => any;
export const get_data_contract_history_with_proof_info: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint) => any;
export const get_data_contracts_with_proof_info: (a: number, b: number, c: number) => any;
export const generate_mnemonic: (a: number, b: number, c: number) => [number, number, number, number];
export const validate_mnemonic: (a: number, b: number, c: number, d: number) => number;
export const mnemonic_to_seed: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const derive_key_from_seed_phrase: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const derive_key_from_seed_with_path: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number, number];
export const derivation_path_bip44_mainnet: (a: number, b: number, c: number) => any;
export const derivation_path_bip44_testnet: (a: number, b: number, c: number) => any;
export const derivation_path_dip9_mainnet: (a: number, b: number, c: number) => any;
export const derivation_path_dip9_testnet: (a: number, b: number, c: number) => any;
export const derivation_path_dip13_mainnet: (a: number) => any;
export const derivation_path_dip13_testnet: (a: number) => any;
export const derive_child_public_key: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const xprv_to_xpub: (a: number, b: number) => [number, number, number, number];
export const generate_key_pair: (a: number, b: number) => [number, number, number];
export const generate_key_pairs: (a: number, b: number, c: number) => [number, number, number, number];
export const key_pair_from_wif: (a: number, b: number) => [number, number, number];
export const key_pair_from_hex: (a: number, b: number, c: number, d: number) => [number, number, number];
export const pubkey_to_address: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const validate_address: (a: number, b: number, c: number, d: number) => number;
export const sign_message: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const derive_key_from_seed_with_extended_path: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number, number];
export const derive_dashpay_contact_key: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => [number, number, number];
export const __wbg_intounderlyingbytesource_free: (a: number, b: number) => void;
export const intounderlyingbytesource_type: (a: number) => number;
export const intounderlyingbytesource_autoAllocateChunkSize: (a: number) => number;
export const intounderlyingbytesource_start: (a: number, b: any) => void;
export const intounderlyingbytesource_pull: (a: number, b: any) => any;
export const intounderlyingbytesource_cancel: (a: number) => void;
export const __wbg_intounderlyingsource_free: (a: number, b: number) => void;
export const intounderlyingsource_pull: (a: number, b: any) => any;
export const intounderlyingsource_cancel: (a: number) => void;
export const __wbg_intounderlyingsink_free: (a: number, b: number) => void;
export const intounderlyingsink_write: (a: number, b: any) => any;
export const intounderlyingsink_close: (a: number) => any;
export const intounderlyingsink_abort: (a: number, b: any) => any;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hc8e8c6d17a2beddc: (a: number, b: number) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7cea2d9b3d9395f8: (a: number, b: number) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hb74bf275a592f386: (a: number, b: number) => void;
export const closure2704_externref_shim: (a: number, b: number, c: any) => void;
export const closure4518_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
