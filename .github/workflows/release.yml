name: 'Release Desktop App'

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          files: |
            LICENSE.md
            README.md
          body_path: CHANGELOG.md

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Install frontend dependencies
        run: pnpm install
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Build Application
        run: pnpm tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb
      - name: Upload Updater JSON as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-json-linux
          path: src-tauri/target/release/bundle/updater/latest.json
          if-no-files-found: error

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install x86_64-apple-darwin target for Universal Binaries
        run: rustup target add x86_64-apple-darwin
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Install frontend dependencies
        run: pnpm install
      - name: Build Universal macOS App
        run: pnpm tauri build --target universal-apple-darwin
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload macOS Artifact to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
      - name: Upload Updater JSON as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-json-macos
          path: src-tauri/target/universal-apple-darwin/release/bundle/latest.json
          if-no-files-found: error

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Install frontend dependencies
        run: pnpm install
      - name: Build Application
        run: pnpm tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      - name: Upload Artifacts to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
      - name: Upload Updater JSON as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-json-windows
          path: src-tauri/target/release/bundle/updater/latest.json
          if-no-files-found: error

  merge-json:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Download all JSON artifacts
        uses: actions/download-artifact@v4
        with:
          path: json-fragments
      - name: Merge JSON files
        run: |
          # The -s flag reads all files into an array.
          # The first file is used as a base for version, date, etc.
          # Then we merge the 'platforms' object from all files together.
          jq -s '.[0] * {platforms: [.[].platforms] | add}' json-fragments/**/*.json > latest.json
      - name: Upload final latest.json to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: latest.json

  publish-release:
    runs-on: ubuntu-latest
    needs: [merge-json]
    steps:
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
